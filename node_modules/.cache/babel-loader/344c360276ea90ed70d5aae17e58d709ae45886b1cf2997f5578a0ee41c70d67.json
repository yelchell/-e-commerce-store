{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment\\\\e_commerce\\\\ecommerce-product-page\\\\src\\\\pages\\\\productmanagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport ProductPickerDialog from '../components/productpicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductManagement = () => {\n  _s();\n  const [showDialog, setShowDialog] = useState(false);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [editingIndex, setEditingIndex] = useState(null);\n\n  // Open dialog for adding or editing a product\n  const handleOpenDialog = (index = null) => {\n    setEditingIndex(index);\n    setShowDialog(true);\n  };\n\n  // Close the product picker dialog\n  const handleCloseDialog = () => {\n    setShowDialog(false);\n    setEditingIndex(null);\n  };\n\n  // Handle product selection from the dialog\n  const handleProductSelect = (products, variants) => {\n    const selectedProduct = products[0]; // Assuming only one product is selected at a time\n    const productWithVariants = {\n      ...selectedProduct,\n      variants: variants.filter(variant => variant.product_id === selectedProduct.id)\n    };\n    if (editingIndex !== null) {\n      // Update the product at the editing index\n      setSelectedProducts(prev => prev.map((product, index) => index === editingIndex ? productWithVariants : product));\n    } else {\n      // Add a new product\n      setSelectedProducts(prev => [...prev, productWithVariants]);\n    }\n    setShowDialog(false);\n    setEditingIndex(null);\n  };\n  const handleAddProduct = () => {\n    // Add a placeholder for a new product\n    setSelectedProducts(prev => [...prev, {\n      id: null,\n      title: '',\n      variants: []\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add Bundle Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Add products to create a bundle. You can add multiple products and their variants.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), selectedProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"form-control-lg\",\n          value: product.title || 'Select Product',\n          readOnly: true,\n          placeholder: \"Select Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          onClick: () => handleOpenDialog(index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), product.variants.map(variant => /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"auto\",\n          className: \"d-flex align-items-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: variant.title,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)]\n      }, variant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: handleAddProduct,\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductPickerDialog, {\n      show: showDialog,\n      onClose: handleCloseDialog,\n      onProductSelect: handleProductSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductManagement, \"jlYu4z85wrAp+k+NaQD14sZi2BM=\");\n_c = ProductManagement;\nexport default ProductManagement;\nvar _c;\n$RefreshReg$(_c, \"ProductManagement\");","map":{"version":3,"names":["React","useState","Table","Form","InputGroup","Col","Container","Row","Button","ProductPickerDialog","jsxDEV","_jsxDEV","ProductManagement","_s","showDialog","setShowDialog","selectedProducts","setSelectedProducts","editingIndex","setEditingIndex","handleOpenDialog","index","handleCloseDialog","handleProductSelect","products","variants","selectedProduct","productWithVariants","filter","variant","product_id","id","prev","map","product","handleAddProduct","title","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Control","value","readOnly","placeholder","onClick","xs","show","onClose","onProductSelect","_c","$RefreshReg$"],"sources":["D:/assignment/e_commerce/ecommerce-product-page/src/pages/productmanagement.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ProductPickerDialog from '../components/productpicker';\r\n\r\nconst ProductManagement = () => {\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [selectedProducts, setSelectedProducts] = useState([]);\r\n    const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n    // Open dialog for adding or editing a product\r\n    const handleOpenDialog = (index = null) => {\r\n        setEditingIndex(index);\r\n        setShowDialog(true);\r\n    };\r\n\r\n    // Close the product picker dialog\r\n    const handleCloseDialog = () => {\r\n        setShowDialog(false);\r\n        setEditingIndex(null);\r\n    };\r\n\r\n    // Handle product selection from the dialog\r\n    const handleProductSelect = (products, variants) => {\r\n        const selectedProduct = products[0]; // Assuming only one product is selected at a time\r\n        const productWithVariants = {\r\n            ...selectedProduct,\r\n            variants: variants.filter(variant => variant.product_id === selectedProduct.id),\r\n        };\r\n\r\n        if (editingIndex !== null) {\r\n            // Update the product at the editing index\r\n            setSelectedProducts((prev) =>\r\n                prev.map((product, index) =>\r\n                    index === editingIndex ? productWithVariants : product\r\n                )\r\n            );\r\n        } else {\r\n            // Add a new product\r\n            setSelectedProducts((prev) => [...prev, productWithVariants]);\r\n        }\r\n\r\n        setShowDialog(false);\r\n        setEditingIndex(null);\r\n    };\r\n\r\n    const handleAddProduct = () => {\r\n        // Add a placeholder for a new product\r\n        setSelectedProducts((prev) => [...prev, { id: null, title: '', variants: [] }]);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <h4>Add Bundle Products</h4>\r\n            <p>\r\n                <i>\r\n                    Add products to create a bundle. You can add multiple products and their variants.\r\n                </i>\r\n            </p>\r\n\r\n            {selectedProducts.map((product, index) => (\r\n                <div key={index} className=\"mb-3\">\r\n                    <InputGroup className=\"mb-3\">\r\n                        <Form.Control\r\n                            className=\"form-control-lg\"\r\n                            value={product.title || 'Select Product'}\r\n                            readOnly\r\n                            placeholder=\"Select Product\"\r\n                        />\r\n                        <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={() => handleOpenDialog(index)}\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                    </InputGroup>\r\n\r\n                    {/* Variants */}\r\n                    {product.variants.map((variant) => (\r\n                        <Row key={variant.id} className=\"mb-2\">\r\n                            <Col xs=\"auto\" className=\"d-flex align-items-center\">\r\n                                {/* Optional drag handle */}\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control value={variant.title} readOnly />\r\n                            </Col>\r\n                        </Row>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n\r\n            <Button variant=\"success\" onClick={handleAddProduct}>\r\n                Add Product\r\n            </Button>\r\n\r\n            <ProductPickerDialog\r\n                show={showDialog}\r\n                onClose={handleCloseDialog}\r\n                onProductSelect={handleProductSelect}\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ProductManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}