{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { createContext } from '../create-context.js';\nimport { mergeProps } from '../merge-props.js';\nimport { cx } from '../utils/cx.js';\nimport { EMPTY_STYLES } from './empty.js';\nimport { chakra } from './factory.js';\nimport { useRecipe } from './use-recipe.js';\nconst upperFirst = str => str.charAt(0).toUpperCase() + str.slice(1);\nfunction createRecipeContext(options) {\n  const {\n    key: recipeKey,\n    recipe: recipeConfig\n  } = options;\n  const contextName = upperFirst(recipeKey || recipeConfig.className || \"Component\");\n  const [PropsProvider, usePropsContext] = createContext({\n    strict: false,\n    name: `${contextName}PropsContext`,\n    providerName: `${contextName}PropsContext`\n  });\n  const withContext = (Component, options2) => {\n    const SuperComponent = chakra(Component, {}, options2);\n    const StyledComponent = forwardRef((inProps, ref) => {\n      const props = mergeProps(usePropsContext(), inProps);\n      const {\n        unstyled,\n        ...otherProps\n      } = props;\n      const fallbackRecipe = props.recipe || recipeConfig;\n      const recipe = useRecipe({\n        key: recipeKey,\n        recipe: fallbackRecipe\n      });\n      const [variantProps, localProps] = recipe.splitVariantProps(otherProps);\n      const styles = unstyled ? EMPTY_STYLES : recipe(variantProps);\n      return /* @__PURE__ */jsx(SuperComponent, {\n        ...localProps,\n        ref,\n        css: [styles, props.css],\n        className: cx(recipe.className, props.className)\n      });\n    });\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  };\n  return {\n    withContext,\n    PropsProvider,\n    usePropsContext\n  };\n}\nexport { createRecipeContext };","map":{"version":3,"names":["jsx","forwardRef","createContext","mergeProps","cx","EMPTY_STYLES","chakra","useRecipe","upperFirst","str","charAt","toUpperCase","slice","createRecipeContext","options","key","recipeKey","recipe","recipeConfig","contextName","className","PropsProvider","usePropsContext","strict","name","providerName","withContext","Component","options2","SuperComponent","StyledComponent","inProps","ref","props","unstyled","otherProps","fallbackRecipe","variantProps","localProps","splitVariantProps","styles","css","displayName"],"sources":["D:/assignment/e_commerce/ecommerce-product-page/node_modules/@chakra-ui/react/dist/esm/styled-system/create-recipe-context.js"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { createContext } from '../create-context.js';\nimport { mergeProps } from '../merge-props.js';\nimport { cx } from '../utils/cx.js';\nimport { EMPTY_STYLES } from './empty.js';\nimport { chakra } from './factory.js';\nimport { useRecipe } from './use-recipe.js';\n\nconst upperFirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);\nfunction createRecipeContext(options) {\n  const { key: recipeKey, recipe: recipeConfig } = options;\n  const contextName = upperFirst(\n    recipeKey || recipeConfig.className || \"Component\"\n  );\n  const [PropsProvider, usePropsContext] = createContext({\n    strict: false,\n    name: `${contextName}PropsContext`,\n    providerName: `${contextName}PropsContext`\n  });\n  const withContext = (Component, options2) => {\n    const SuperComponent = chakra(Component, {}, options2);\n    const StyledComponent = forwardRef((inProps, ref) => {\n      const props = mergeProps(usePropsContext(), inProps);\n      const { unstyled, ...otherProps } = props;\n      const fallbackRecipe = props.recipe || recipeConfig;\n      const recipe = useRecipe({ key: recipeKey, recipe: fallbackRecipe });\n      const [variantProps, localProps] = recipe.splitVariantProps(otherProps);\n      const styles = unstyled ? EMPTY_STYLES : recipe(variantProps);\n      return /* @__PURE__ */ jsx(\n        SuperComponent,\n        {\n          ...localProps,\n          ref,\n          css: [styles, props.css],\n          className: cx(recipe.className, props.className)\n        }\n      );\n    });\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  };\n  return {\n    withContext,\n    PropsProvider,\n    usePropsContext\n  };\n}\n\nexport { createRecipeContext };\n"],"mappings":"AAAA,YAAY;AACZ,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,EAAE,QAAQ,gBAAgB;AACnC,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,SAAS,QAAQ,iBAAiB;AAE3C,MAAMC,UAAU,GAAIC,GAAG,IAAKA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC;AACtE,SAASC,mBAAmBA,CAACC,OAAO,EAAE;EACpC,MAAM;IAAEC,GAAG,EAAEC,SAAS;IAAEC,MAAM,EAAEC;EAAa,CAAC,GAAGJ,OAAO;EACxD,MAAMK,WAAW,GAAGX,UAAU,CAC5BQ,SAAS,IAAIE,YAAY,CAACE,SAAS,IAAI,WACzC,CAAC;EACD,MAAM,CAACC,aAAa,EAAEC,eAAe,CAAC,GAAGpB,aAAa,CAAC;IACrDqB,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,GAAGL,WAAW,cAAc;IAClCM,YAAY,EAAE,GAAGN,WAAW;EAC9B,CAAC,CAAC;EACF,MAAMO,WAAW,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;IAC3C,MAAMC,cAAc,GAAGvB,MAAM,CAACqB,SAAS,EAAE,CAAC,CAAC,EAAEC,QAAQ,CAAC;IACtD,MAAME,eAAe,GAAG7B,UAAU,CAAC,CAAC8B,OAAO,EAAEC,GAAG,KAAK;MACnD,MAAMC,KAAK,GAAG9B,UAAU,CAACmB,eAAe,CAAC,CAAC,EAAES,OAAO,CAAC;MACpD,MAAM;QAAEG,QAAQ;QAAE,GAAGC;MAAW,CAAC,GAAGF,KAAK;MACzC,MAAMG,cAAc,GAAGH,KAAK,CAAChB,MAAM,IAAIC,YAAY;MACnD,MAAMD,MAAM,GAAGV,SAAS,CAAC;QAAEQ,GAAG,EAAEC,SAAS;QAAEC,MAAM,EAAEmB;MAAe,CAAC,CAAC;MACpE,MAAM,CAACC,YAAY,EAAEC,UAAU,CAAC,GAAGrB,MAAM,CAACsB,iBAAiB,CAACJ,UAAU,CAAC;MACvE,MAAMK,MAAM,GAAGN,QAAQ,GAAG7B,YAAY,GAAGY,MAAM,CAACoB,YAAY,CAAC;MAC7D,OAAO,eAAgBrC,GAAG,CACxB6B,cAAc,EACd;QACE,GAAGS,UAAU;QACbN,GAAG;QACHS,GAAG,EAAE,CAACD,MAAM,EAAEP,KAAK,CAACQ,GAAG,CAAC;QACxBrB,SAAS,EAAEhB,EAAE,CAACa,MAAM,CAACG,SAAS,EAAEa,KAAK,CAACb,SAAS;MACjD,CACF,CAAC;IACH,CAAC,CAAC;IACFU,eAAe,CAACY,WAAW,GAAGf,SAAS,CAACe,WAAW,IAAIf,SAAS,CAACH,IAAI;IACrE,OAAOM,eAAe;EACxB,CAAC;EACD,OAAO;IACLJ,WAAW;IACXL,aAAa;IACbC;EACF,CAAC;AACH;AAEA,SAAST,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}