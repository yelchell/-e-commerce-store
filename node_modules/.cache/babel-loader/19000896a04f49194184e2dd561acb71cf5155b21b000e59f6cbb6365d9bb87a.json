{"ast":null,"code":"\"use strict\";\n\nimport { useMemo } from 'react';\nimport { splitProps } from '../utils/split-props.js';\nimport { useChakraContext } from './provider.js';\nfunction useResolvedProps(inProps, cvaRecipe, shouldForwardProps) {\n  const {\n    css,\n    isValidProperty\n  } = useChakraContext();\n  const {\n    children,\n    ...props\n  } = inProps;\n  const result = useMemo(() => {\n    const [htmlProps, restProps_A] = splitProps(props, [\"htmlWidth\", \"htmlHeight\", \"htmlSize\", \"htmlTranslate\"]);\n    const [forwardedProps, restProps_B] = splitProps(restProps_A, key => shouldForwardProps(key, cvaRecipe.variantKeys));\n    const [variantProps, restProps_C] = splitProps(restProps_B, cvaRecipe.variantKeys);\n    const [styleProps, elementProps] = splitProps(restProps_C, isValidProperty);\n    return {\n      htmlProps: getHtmlProps(htmlProps),\n      forwardedProps,\n      variantProps,\n      styleProps,\n      elementProps\n    };\n  }, [cvaRecipe.variantKeys, shouldForwardProps, props, isValidProperty]);\n  const {\n    css: cssStyles,\n    ...propStyles\n  } = result.styleProps;\n  const cvaStyles = useMemo(() => cvaRecipe(result.variantProps), [cvaRecipe, result.variantProps]);\n  const styles = useMemo(() => {\n    return css(cvaStyles, ...toArray(cssStyles), propStyles);\n  }, [css, cvaStyles, cssStyles, propStyles]);\n  return {\n    styles,\n    props: {\n      ...result.forwardedProps,\n      ...result.elementProps,\n      ...result.htmlProps,\n      children\n    }\n  };\n}\nconst getHtmlProps = props => {\n  const htmlProps = {};\n  for (const key in props) {\n    if (key.startsWith(\"html\")) {\n      htmlProps[key.replace(\"html\", \"\").toLowerCase()] = props[key];\n    }\n  }\n  return htmlProps;\n};\nconst toArray = val => {\n  const res = Array.isArray(val) ? val : [val];\n  return res.filter(Boolean).flat();\n};\nexport { useResolvedProps };","map":{"version":3,"names":["useMemo","splitProps","useChakraContext","useResolvedProps","inProps","cvaRecipe","shouldForwardProps","css","isValidProperty","children","props","result","htmlProps","restProps_A","forwardedProps","restProps_B","key","variantKeys","variantProps","restProps_C","styleProps","elementProps","getHtmlProps","cssStyles","propStyles","cvaStyles","styles","toArray","startsWith","replace","toLowerCase","val","res","Array","isArray","filter","Boolean","flat"],"sources":["D:/assignment/e_commerce/ecommerce-product-page/node_modules/@chakra-ui/react/dist/esm/styled-system/use-resolved-props.js"],"sourcesContent":["\"use strict\";\nimport { useMemo } from 'react';\nimport { splitProps } from '../utils/split-props.js';\nimport { useChakraContext } from './provider.js';\n\nfunction useResolvedProps(inProps, cvaRecipe, shouldForwardProps) {\n  const { css, isValidProperty } = useChakraContext();\n  const { children, ...props } = inProps;\n  const result = useMemo(() => {\n    const [htmlProps, restProps_A] = splitProps(props, [\n      \"htmlWidth\",\n      \"htmlHeight\",\n      \"htmlSize\",\n      \"htmlTranslate\"\n    ]);\n    const [forwardedProps, restProps_B] = splitProps(\n      restProps_A,\n      (key) => shouldForwardProps(key, cvaRecipe.variantKeys)\n    );\n    const [variantProps, restProps_C] = splitProps(\n      restProps_B,\n      cvaRecipe.variantKeys\n    );\n    const [styleProps, elementProps] = splitProps(restProps_C, isValidProperty);\n    return {\n      htmlProps: getHtmlProps(htmlProps),\n      forwardedProps,\n      variantProps,\n      styleProps,\n      elementProps\n    };\n  }, [cvaRecipe.variantKeys, shouldForwardProps, props, isValidProperty]);\n  const { css: cssStyles, ...propStyles } = result.styleProps;\n  const cvaStyles = useMemo(\n    () => cvaRecipe(result.variantProps),\n    [cvaRecipe, result.variantProps]\n  );\n  const styles = useMemo(() => {\n    return css(cvaStyles, ...toArray(cssStyles), propStyles);\n  }, [css, cvaStyles, cssStyles, propStyles]);\n  return {\n    styles,\n    props: {\n      ...result.forwardedProps,\n      ...result.elementProps,\n      ...result.htmlProps,\n      children\n    }\n  };\n}\nconst getHtmlProps = (props) => {\n  const htmlProps = {};\n  for (const key in props) {\n    if (key.startsWith(\"html\")) {\n      htmlProps[key.replace(\"html\", \"\").toLowerCase()] = props[key];\n    }\n  }\n  return htmlProps;\n};\nconst toArray = (val) => {\n  const res = Array.isArray(val) ? val : [val];\n  return res.filter(Boolean).flat();\n};\n\nexport { useResolvedProps };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,gBAAgB,QAAQ,eAAe;AAEhD,SAASC,gBAAgBA,CAACC,OAAO,EAAEC,SAAS,EAAEC,kBAAkB,EAAE;EAChE,MAAM;IAAEC,GAAG;IAAEC;EAAgB,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EACnD,MAAM;IAAEO,QAAQ;IAAE,GAAGC;EAAM,CAAC,GAAGN,OAAO;EACtC,MAAMO,MAAM,GAAGX,OAAO,CAAC,MAAM;IAC3B,MAAM,CAACY,SAAS,EAAEC,WAAW,CAAC,GAAGZ,UAAU,CAACS,KAAK,EAAE,CACjD,WAAW,EACX,YAAY,EACZ,UAAU,EACV,eAAe,CAChB,CAAC;IACF,MAAM,CAACI,cAAc,EAAEC,WAAW,CAAC,GAAGd,UAAU,CAC9CY,WAAW,EACVG,GAAG,IAAKV,kBAAkB,CAACU,GAAG,EAAEX,SAAS,CAACY,WAAW,CACxD,CAAC;IACD,MAAM,CAACC,YAAY,EAAEC,WAAW,CAAC,GAAGlB,UAAU,CAC5Cc,WAAW,EACXV,SAAS,CAACY,WACZ,CAAC;IACD,MAAM,CAACG,UAAU,EAAEC,YAAY,CAAC,GAAGpB,UAAU,CAACkB,WAAW,EAAEX,eAAe,CAAC;IAC3E,OAAO;MACLI,SAAS,EAAEU,YAAY,CAACV,SAAS,CAAC;MAClCE,cAAc;MACdI,YAAY;MACZE,UAAU;MACVC;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,SAAS,CAACY,WAAW,EAAEX,kBAAkB,EAAEI,KAAK,EAAEF,eAAe,CAAC,CAAC;EACvE,MAAM;IAAED,GAAG,EAAEgB,SAAS;IAAE,GAAGC;EAAW,CAAC,GAAGb,MAAM,CAACS,UAAU;EAC3D,MAAMK,SAAS,GAAGzB,OAAO,CACvB,MAAMK,SAAS,CAACM,MAAM,CAACO,YAAY,CAAC,EACpC,CAACb,SAAS,EAAEM,MAAM,CAACO,YAAY,CACjC,CAAC;EACD,MAAMQ,MAAM,GAAG1B,OAAO,CAAC,MAAM;IAC3B,OAAOO,GAAG,CAACkB,SAAS,EAAE,GAAGE,OAAO,CAACJ,SAAS,CAAC,EAAEC,UAAU,CAAC;EAC1D,CAAC,EAAE,CAACjB,GAAG,EAAEkB,SAAS,EAAEF,SAAS,EAAEC,UAAU,CAAC,CAAC;EAC3C,OAAO;IACLE,MAAM;IACNhB,KAAK,EAAE;MACL,GAAGC,MAAM,CAACG,cAAc;MACxB,GAAGH,MAAM,CAACU,YAAY;MACtB,GAAGV,MAAM,CAACC,SAAS;MACnBH;IACF;EACF,CAAC;AACH;AACA,MAAMa,YAAY,GAAIZ,KAAK,IAAK;EAC9B,MAAME,SAAS,GAAG,CAAC,CAAC;EACpB,KAAK,MAAMI,GAAG,IAAIN,KAAK,EAAE;IACvB,IAAIM,GAAG,CAACY,UAAU,CAAC,MAAM,CAAC,EAAE;MAC1BhB,SAAS,CAACI,GAAG,CAACa,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,GAAGpB,KAAK,CAACM,GAAG,CAAC;IAC/D;EACF;EACA,OAAOJ,SAAS;AAClB,CAAC;AACD,MAAMe,OAAO,GAAII,GAAG,IAAK;EACvB,MAAMC,GAAG,GAAGC,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACA,GAAG,CAAC;EAC5C,OAAOC,GAAG,CAACG,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC;AACnC,CAAC;AAED,SAASlC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}