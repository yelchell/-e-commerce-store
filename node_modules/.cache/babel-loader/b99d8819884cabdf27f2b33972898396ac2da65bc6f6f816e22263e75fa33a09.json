{"ast":null,"code":"import React,{useState}from'react';import Table from'react-bootstrap/Table';import Form from'react-bootstrap/Form';import InputGroup from'react-bootstrap/InputGroup';import Col from'react-bootstrap/Col';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Button from'react-bootstrap/Button';import{DndProvider,useDrag,useDrop}from'react-dnd';import{HTML5Backend}from'react-dnd-html5-backend';import ProductPickerDialog from'../components/productpicker';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ItemType={VARIANT:'variant'};// Draggable Variant Component\nconst DraggableVariant=_ref=>{let{variant,index,moveVariant,productIndex}=_ref;const[,ref]=useDrag({type:ItemType.VARIANT,item:{index,productIndex}});const[,drop]=useDrop({accept:ItemType.VARIANT,hover:draggedItem=>{if(draggedItem.index!==index||draggedItem.productIndex!==productIndex){moveVariant(draggedItem.index,index,productIndex);draggedItem.index=index;// Update the dragged item's index\n}}});return/*#__PURE__*/_jsxs(Row,{ref:node=>ref(drop(node)),className:\"align-items-center mb-2\",children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Control,{className:\"form-control\",value:variant.title,readOnly:true})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Control,{className:\"form-control\",value:`$${variant.price}`,readOnly:true})})]});};const ProductManagement=()=>{const[showDialog,setShowDialog]=useState(false);const[selectedProducts,setSelectedProducts]=useState([]);const[editingIndex,setEditingIndex]=useState(null);const[variantVisibility,setVariantVisibility]=useState({});// Track visibility of variants\nconst[discountEdit,setDiscountEdit]=useState({});// Track which product is being edited for discount\n// Open dialog for adding or editing a product\nconst handleOpenDialog=index=>{setEditingIndex(index);// Set the index of the input being edited\nsetShowDialog(true);};// Close the product picker dialog\nconst handleCloseDialog=()=>{setShowDialog(false);setEditingIndex(null);// Reset editing index\n};// Handle product and variant selection from the dialog\nconst handleProductSelect=(products,variants)=>{const selectedProduct=products[0];// Assuming only one product is selected at a time\nconst productWithVariants={...selectedProduct,variants:variants.filter(variant=>variant.product_id===selectedProduct.id)};setSelectedProducts(prev=>{const updatedProducts=[...prev];if(editingIndex!==null){// Update the specific input box that was edited\nupdatedProducts[editingIndex]=productWithVariants;}else{// Add a new product if no specific index is being edited\nupdatedProducts.push(productWithVariants);}return updatedProducts;});// Reset the dialog states\nsetShowDialog(false);setEditingIndex(null);};// Add a new input box for a product\nconst handleAddProduct=()=>{setSelectedProducts(prev=>[...prev,{id:null,title:'',variants:[],discount:null}]);};// Toggle variant visibility\nconst toggleVariants=index=>{setVariantVisibility(prev=>({...prev,[index]:!prev[index]// Toggle visibility for the specific product\n}));};// Move variants within the product\nconst moveVariant=(fromIndex,toIndex,productIndex)=>{setSelectedProducts(prev=>{const updatedProducts=[...prev];const variants=[...updatedProducts[productIndex].variants];const[movedVariant]=variants.splice(fromIndex,1);// Remove the dragged variant\nvariants.splice(toIndex,0,movedVariant);// Insert it at the new position\nupdatedProducts[productIndex].variants=variants;return updatedProducts;});};return/*#__PURE__*/_jsx(DndProvider,{backend:HTML5Backend,children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Product\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Discount\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[selectedProducts.map((product,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsxs(InputGroup,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Control,{className:\"form-control-lg\",value:product.title||'Select Product',readOnly:true,placeholder:\"Select Product\",onClick:()=>handleOpenDialog(index)// Open dialog for editing this product\n}),product.title&&/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",onClick:()=>handleOpenDialog(index),children:\"Edit\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"link\",onClick:()=>toggleVariants(index)// Toggle variant visibility\n,disabled:!product.title// Disable if no product is selected\n,children:variantVisibility[index]?'Hide Variants':'Show Variants'})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",disabled:!product.title// Disable if no product is selected\n,onClick:()=>setDiscountEdit(prev=>({...prev,[index]:true})),children:discountEdit[index]?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Form.Control,{type:\"number\",placeholder:\"Discount Value\",className:\"mb-2\",onChange:e=>{const value=e.target.value;setSelectedProducts(prev=>{const updatedProducts=[...prev];updatedProducts[index].discountValue=value;return updatedProducts;});}}),/*#__PURE__*/_jsxs(Form.Select,{onChange:e=>{const type=e.target.value;setSelectedProducts(prev=>{const updatedProducts=[...prev];updatedProducts[index].discountType=type;return updatedProducts;});},children:[/*#__PURE__*/_jsx(\"option\",{value:\"percentage\",children:\"%\"}),/*#__PURE__*/_jsx(\"option\",{value:\"flat\",children:\"Flat\"})]})]}):'Add Discount'})})]}),variantVisibility[index]&&product.variants.map((variant,variantIndex)=>/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"2\",children:/*#__PURE__*/_jsx(DraggableVariant,{variant:variant,index:variantIndex,moveVariant:moveVariant,productIndex:index})})},variant.id))]},index)),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"2\",children:/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:handleAddProduct,children:\"Add Product\"})})})]})]}),/*#__PURE__*/_jsx(ProductPickerDialog,{show:showDialog,onClose:handleCloseDialog,onProductSelect:handleProductSelect})]})});};export default ProductManagement;","map":{"version":3,"names":["React","useState","Table","Form","InputGroup","Col","Container","Row","Button","DndProvider","useDrag","useDrop","HTML5Backend","ProductPickerDialog","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ItemType","VARIANT","DraggableVariant","_ref","variant","index","moveVariant","productIndex","ref","type","item","drop","accept","hover","draggedItem","node","className","children","Control","value","title","readOnly","price","ProductManagement","showDialog","setShowDialog","selectedProducts","setSelectedProducts","editingIndex","setEditingIndex","variantVisibility","setVariantVisibility","discountEdit","setDiscountEdit","handleOpenDialog","handleCloseDialog","handleProductSelect","products","variants","selectedProduct","productWithVariants","filter","product_id","id","prev","updatedProducts","push","handleAddProduct","discount","toggleVariants","fromIndex","toIndex","movedVariant","splice","backend","striped","bordered","map","product","placeholder","onClick","disabled","onChange","e","target","discountValue","Select","discountType","variantIndex","colSpan","show","onClose","onProductSelect"],"sources":["D:/assignment/e_commerce/ecommerce-product-page/src/pages/productmanagement.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport ProductPickerDialog from '../components/productpicker';\r\n\r\nconst ItemType = {\r\n    VARIANT: 'variant',\r\n};\r\n\r\n// Draggable Variant Component\r\nconst DraggableVariant = ({ variant, index, moveVariant, productIndex }) => {\r\n    const [, ref] = useDrag({\r\n        type: ItemType.VARIANT,\r\n        item: { index, productIndex },\r\n    });\r\n\r\n    const [, drop] = useDrop({\r\n        accept: ItemType.VARIANT,\r\n        hover: (draggedItem) => {\r\n            if (draggedItem.index !== index || draggedItem.productIndex !== productIndex) {\r\n                moveVariant(draggedItem.index, index, productIndex);\r\n                draggedItem.index = index; // Update the dragged item's index\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <Row ref={(node) => ref(drop(node))} className=\"align-items-center mb-2\">\r\n            <Col>\r\n                <Form.Control className=\"form-control\" value={variant.title} readOnly />\r\n            </Col>\r\n            <Col>\r\n                <Form.Control className=\"form-control\" value={`$${variant.price}`} readOnly />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nconst ProductManagement = () => {\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [selectedProducts, setSelectedProducts] = useState([]);\r\n    const [editingIndex, setEditingIndex] = useState(null);\r\n    const [variantVisibility, setVariantVisibility] = useState({}); // Track visibility of variants\r\n    const [discountEdit, setDiscountEdit] = useState({}); // Track which product is being edited for discount\r\n\r\n    // Open dialog for adding or editing a product\r\n    const handleOpenDialog = (index) => {\r\n        setEditingIndex(index); // Set the index of the input being edited\r\n        setShowDialog(true);\r\n    };\r\n\r\n    // Close the product picker dialog\r\n    const handleCloseDialog = () => {\r\n        setShowDialog(false);\r\n        setEditingIndex(null); // Reset editing index\r\n    };\r\n\r\n    // Handle product and variant selection from the dialog\r\n    const handleProductSelect = (products, variants) => {\r\n        const selectedProduct = products[0]; // Assuming only one product is selected at a time\r\n        const productWithVariants = {\r\n            ...selectedProduct,\r\n            variants: variants.filter((variant) => variant.product_id === selectedProduct.id),\r\n        };\r\n\r\n        setSelectedProducts((prev) => {\r\n            const updatedProducts = [...prev];\r\n            if (editingIndex !== null) {\r\n                // Update the specific input box that was edited\r\n                updatedProducts[editingIndex] = productWithVariants;\r\n            } else {\r\n                // Add a new product if no specific index is being edited\r\n                updatedProducts.push(productWithVariants);\r\n            }\r\n            return updatedProducts;\r\n        });\r\n\r\n        // Reset the dialog states\r\n        setShowDialog(false);\r\n        setEditingIndex(null);\r\n    };\r\n\r\n    // Add a new input box for a product\r\n    const handleAddProduct = () => {\r\n        setSelectedProducts((prev) => [...prev, { id: null, title: '', variants: [], discount: null }]);\r\n    };\r\n\r\n    // Toggle variant visibility\r\n    const toggleVariants = (index) => {\r\n        setVariantVisibility((prev) => ({\r\n            ...prev,\r\n            [index]: !prev[index], // Toggle visibility for the specific product\r\n        }));\r\n    };\r\n\r\n    // Move variants within the product\r\n    const moveVariant = (fromIndex, toIndex, productIndex) => {\r\n        setSelectedProducts((prev) => {\r\n            const updatedProducts = [...prev];\r\n            const variants = [...updatedProducts[productIndex].variants];\r\n            const [movedVariant] = variants.splice(fromIndex, 1); // Remove the dragged variant\r\n            variants.splice(toIndex, 0, movedVariant); // Insert it at the new position\r\n            updatedProducts[productIndex].variants = variants;\r\n            return updatedProducts;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <Container>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Product</th>\r\n                            <th>Discount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {selectedProducts.map((product, index) => (\r\n                            <React.Fragment key={index}>\r\n                                {/* Product Input */}\r\n                                <tr>\r\n                                    <td>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <Form.Control\r\n                                                className=\"form-control-lg\"\r\n                                                value={product.title || 'Select Product'}\r\n                                                readOnly\r\n                                                placeholder=\"Select Product\"\r\n                                                onClick={() => handleOpenDialog(index)} // Open dialog for editing this product\r\n                                            />\r\n                                            {product.title && (\r\n                                                <Button\r\n                                                    variant=\"outline-secondary\"\r\n                                                    onClick={() => handleOpenDialog(index)}\r\n                                                >\r\n                                                    Edit\r\n                                                </Button>\r\n                                            )}\r\n                                        </InputGroup>\r\n                                        <Button\r\n                                            variant=\"link\"\r\n                                            onClick={() => toggleVariants(index)} // Toggle variant visibility\r\n                                            disabled={!product.title} // Disable if no product is selected\r\n                                        >\r\n                                            {variantVisibility[index] ? 'Hide Variants' : 'Show Variants'}\r\n                                        </Button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button\r\n                                            variant=\"primary\"\r\n                                            disabled={!product.title} // Disable if no product is selected\r\n                                            onClick={() =>\r\n                                                setDiscountEdit((prev) => ({\r\n                                                    ...prev,\r\n                                                    [index]: true,\r\n                                                }))\r\n                                            }\r\n                                        >\r\n                                            {discountEdit[index] ? (\r\n                                                <>\r\n                                                    <Form.Control\r\n                                                        type=\"number\"\r\n                                                        placeholder=\"Discount Value\"\r\n                                                        className=\"mb-2\"\r\n                                                        onChange={(e) => {\r\n                                                            const value = e.target.value;\r\n                                                            setSelectedProducts((prev) => {\r\n                                                                const updatedProducts = [...prev];\r\n                                                                updatedProducts[index].discountValue = value;\r\n                                                                return updatedProducts;\r\n                                                            });\r\n                                                        }}\r\n                                                    />\r\n                                                    <Form.Select\r\n                                                        onChange={(e) => {\r\n                                                            const type = e.target.value;\r\n                                                            setSelectedProducts((prev) => {\r\n                                                                const updatedProducts = [...prev];\r\n                                                                updatedProducts[index].discountType = type;\r\n                                                                return updatedProducts;\r\n                                                            });\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value=\"percentage\">%</option>\r\n                                                        <option value=\"flat\">Flat</option>\r\n                                                    </Form.Select>\r\n                                                </>\r\n                                            ) : (\r\n                                                'Add Discount'\r\n                                            )}\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* Variants */}\r\n                                {variantVisibility[index] &&\r\n                                    product.variants.map((variant, variantIndex) => (\r\n                                        <tr key={variant.id}>\r\n                                            <td colSpan=\"2\">\r\n                                                <DraggableVariant\r\n                                                    variant={variant}\r\n                                                    index={variantIndex}\r\n                                                    moveVariant={moveVariant}\r\n                                                    productIndex={index}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </React.Fragment>\r\n                        ))}\r\n\r\n                        {/* Add Product Button */}\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <Button variant=\"success\" onClick={handleAddProduct}>\r\n                                    Add Product\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <ProductPickerDialog\r\n                    show={showDialog}\r\n                    onClose={handleCloseDialog}\r\n                    onProductSelect={handleProductSelect}\r\n                />\r\n            </Container>\r\n        </DndProvider>\r\n    );\r\n};\r\n\r\nexport default ProductManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}