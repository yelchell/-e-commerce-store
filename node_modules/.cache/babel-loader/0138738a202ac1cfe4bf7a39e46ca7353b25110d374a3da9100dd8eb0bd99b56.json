{"ast":null,"code":"// src/number.ts\nfunction wrap(num, max) {\n  return (num % max + max) % max;\n}\nfunction round(num, t) {\n  const p = 10 ** (t ?? 10);\n  num = Math.round(num * p) / p;\n  return t ? num.toFixed(t) : num.toString();\n}\nfunction roundToDevicePixel(num) {\n  if (typeof window.devicePixelRatio !== \"number\") return Math.round(num);\n  const dp = window.devicePixelRatio;\n  return Math.floor(num * dp + 0.5) / dp;\n}\nvar valueToPercent = (v, r) => (nan(v) - r.min) * 100 / (r.max - r.min);\nvar percentToValue = (v, r) => r.min + (r.max - r.min) * nan(v);\nfunction clamp(v, o) {\n  return Math.min(Math.max(nan(v), o.min), o.max);\n}\nfunction countDecimals(value) {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1,\n    p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n}\nvar increment = (v, s) => decimalOperation(nan(v), \"+\", s);\nvar decrement = (v, s) => decimalOperation(nan(v), \"-\", s);\nfunction snapToStep(num, step) {\n  const p = countDecimals(step);\n  const v = Math.round(nan(num) / step) * step;\n  return round(v, p);\n}\nfunction nan(v) {\n  return Number.isNaN(v) ? 0 : v;\n}\nfunction formatDecimal(v, o) {\n  return new Intl.NumberFormat(\"en-US\", {\n    useGrouping: false,\n    style: \"decimal\",\n    minimumFractionDigits: o.minFractionDigits,\n    maximumFractionDigits: o.maxFractionDigits\n  }).format(nan(v));\n}\nfunction isAtMax(val, o) {\n  return nan(val) >= o.max;\n}\nfunction isAtMin(val, o) {\n  return nan(val) <= o.min;\n}\nfunction isWithinRange(val, o) {\n  return nan(val) >= o.min && nan(val) <= o.max;\n}\nfunction decimalOperation(a, op, b) {\n  let result = op === \"+\" ? a + b : a - b;\n  if (a % 1 !== 0 || b % 1 !== 0) {\n    const multiplier = 10 ** Math.max(countDecimals(a), countDecimals(b));\n    a = Math.round(a * multiplier);\n    b = Math.round(b * multiplier);\n    result = op === \"+\" ? a + b : a - b;\n    result /= multiplier;\n  }\n  return result;\n}\n\n// src/number-format.ts\nvar nf = new Intl.NumberFormat(\"en-US\", {\n  style: \"decimal\",\n  maximumFractionDigits: 20\n});\nfunction formatter(n) {\n  return parseFloat(nf.format(n));\n}\n\n// src/transform.ts\nvar transform = (a, b) => {\n  const i = {\n    min: a[0],\n    max: a[1]\n  };\n  const o = {\n    min: b[0],\n    max: b[1]\n  };\n  return v => {\n    if (i.min === i.max || o.min === o.max) return o.min;\n    const ratio = (o.max - o.min) / (i.max - i.min);\n    return o.min + ratio * (v - i.min);\n  };\n};\nfunction toRanges(o) {\n  const spacing = o.spacing ?? 0;\n  return o.value.map((v, i) => {\n    const min = i === 0 ? o.min : o.value[i - 1] + spacing;\n    const max = i === o.value.length - 1 ? o.max : o.value[i + 1] - spacing;\n    return {\n      min,\n      max,\n      value: v\n    };\n  });\n}\nfunction toRangeArray(o) {\n  let i = o.min;\n  const range = [];\n  while (i <= o.max) {\n    range.push(i);\n    i = formatter(i + o.step);\n  }\n  return range;\n}\nexport { clamp, countDecimals, decrement, formatDecimal, increment, isAtMax, isAtMin, isWithinRange, nan, percentToValue, round, roundToDevicePixel, snapToStep, toRangeArray, toRanges, transform, valueToPercent, wrap };","map":{"version":3,"names":["wrap","num","max","round","t","p","Math","toFixed","toString","roundToDevicePixel","window","devicePixelRatio","dp","floor","valueToPercent","v","r","nan","min","percentToValue","clamp","o","countDecimals","value","Number","isFinite","e","increment","s","decimalOperation","decrement","snapToStep","step","isNaN","formatDecimal","Intl","NumberFormat","useGrouping","style","minimumFractionDigits","minFractionDigits","maximumFractionDigits","maxFractionDigits","format","isAtMax","val","isAtMin","isWithinRange","a","op","b","result","multiplier","nf","formatter","n","parseFloat","transform","i","ratio","toRanges","spacing","map","length","toRangeArray","range","push"],"sources":["D:/assignment/e_commerce/ecommerce-product-page/node_modules/@zag-js/number-utils/dist/index.mjs"],"sourcesContent":["// src/number.ts\nfunction wrap(num, max) {\n  return (num % max + max) % max;\n}\nfunction round(num, t) {\n  const p = 10 ** (t ?? 10);\n  num = Math.round(num * p) / p;\n  return t ? num.toFixed(t) : num.toString();\n}\nfunction roundToDevicePixel(num) {\n  if (typeof window.devicePixelRatio !== \"number\") return Math.round(num);\n  const dp = window.devicePixelRatio;\n  return Math.floor(num * dp + 0.5) / dp;\n}\nvar valueToPercent = (v, r) => (nan(v) - r.min) * 100 / (r.max - r.min);\nvar percentToValue = (v, r) => r.min + (r.max - r.min) * nan(v);\nfunction clamp(v, o) {\n  return Math.min(Math.max(nan(v), o.min), o.max);\n}\nfunction countDecimals(value) {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1, p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n}\nvar increment = (v, s) => decimalOperation(nan(v), \"+\", s);\nvar decrement = (v, s) => decimalOperation(nan(v), \"-\", s);\nfunction snapToStep(num, step) {\n  const p = countDecimals(step);\n  const v = Math.round(nan(num) / step) * step;\n  return round(v, p);\n}\nfunction nan(v) {\n  return Number.isNaN(v) ? 0 : v;\n}\nfunction formatDecimal(v, o) {\n  return new Intl.NumberFormat(\"en-US\", {\n    useGrouping: false,\n    style: \"decimal\",\n    minimumFractionDigits: o.minFractionDigits,\n    maximumFractionDigits: o.maxFractionDigits\n  }).format(nan(v));\n}\nfunction isAtMax(val, o) {\n  return nan(val) >= o.max;\n}\nfunction isAtMin(val, o) {\n  return nan(val) <= o.min;\n}\nfunction isWithinRange(val, o) {\n  return nan(val) >= o.min && nan(val) <= o.max;\n}\nfunction decimalOperation(a, op, b) {\n  let result = op === \"+\" ? a + b : a - b;\n  if (a % 1 !== 0 || b % 1 !== 0) {\n    const multiplier = 10 ** Math.max(countDecimals(a), countDecimals(b));\n    a = Math.round(a * multiplier);\n    b = Math.round(b * multiplier);\n    result = op === \"+\" ? a + b : a - b;\n    result /= multiplier;\n  }\n  return result;\n}\n\n// src/number-format.ts\nvar nf = new Intl.NumberFormat(\"en-US\", { style: \"decimal\", maximumFractionDigits: 20 });\nfunction formatter(n) {\n  return parseFloat(nf.format(n));\n}\n\n// src/transform.ts\nvar transform = (a, b) => {\n  const i = { min: a[0], max: a[1] };\n  const o = { min: b[0], max: b[1] };\n  return (v) => {\n    if (i.min === i.max || o.min === o.max) return o.min;\n    const ratio = (o.max - o.min) / (i.max - i.min);\n    return o.min + ratio * (v - i.min);\n  };\n};\nfunction toRanges(o) {\n  const spacing = o.spacing ?? 0;\n  return o.value.map((v, i) => {\n    const min = i === 0 ? o.min : o.value[i - 1] + spacing;\n    const max = i === o.value.length - 1 ? o.max : o.value[i + 1] - spacing;\n    return { min, max, value: v };\n  });\n}\nfunction toRangeArray(o) {\n  let i = o.min;\n  const range = [];\n  while (i <= o.max) {\n    range.push(i);\n    i = formatter(i + o.step);\n  }\n  return range;\n}\n\nexport { clamp, countDecimals, decrement, formatDecimal, increment, isAtMax, isAtMin, isWithinRange, nan, percentToValue, round, roundToDevicePixel, snapToStep, toRangeArray, toRanges, transform, valueToPercent, wrap };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}